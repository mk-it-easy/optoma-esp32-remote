name: Build Optoma ESP32 Remote

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PlatformIO
        run: |
          python3 -m pip install -U platformio

      - name: Build with PlatformIO
        run: |
          platformio run

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            .pio/build/esp32doit-devkit-v1/firmware.bin
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      contents: write
    
    if: github.event_name == 'release'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .pio/build/esp32doit-devkit-v1/firmware.bin
          asset_name: firmware-${{ env.TAG_NAME }}.bin
          asset_content_type: application/octet-stream
